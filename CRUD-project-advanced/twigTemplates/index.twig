{% if isAuth %}
  <p>Добро пожаловать <a href="/profile">{{ userName }}</a>!</p>
    <br>
    <a href="?logout" class="black-button">Выйти</a>
{% else %}
    {% include 'auth.twig' %}
{% endif %} 

<h2>Итоги</h2>
<ul>
    <li>Из-за того, что Db теперь вызываем с параметрами конфигуркции приложения, дополнил фнукицонал своего контейнера замыканиями (Closure). Вот так подключаю db: App::bind('db', function ($app) {
    $config = $app->getConfig('db');
    return new \app\engine\Db(
        $config['driver'], 
        $config['host'], 
        $config['login'], 
        $config['password'], 
        $config['database'],
        $config['charset']);});</li>
    <li>Восстановил функциональность магазина на объектах. Конечно код вырос, но стал более структуированным.</li>
    <li>Весь код писал сам, некоторые идеи позаимствовал в Laravel (код не копипастил, некоторые строки просто перенабрал как там). Понимаю, что писать слабенький аналог Laravel 
    в реальной жизни вряд ли придется. Зато так немного освоил IoC-контроллер, фасады. </li>
    <li>Из всего того, что я сделал, мне больше всего понравился динамический список любых сущностей. Там я универсальный бэкэнд написал на PHP и универсальный фронт на чистом ООП JS 
    (а то JS почти весь вылетел из головы после курсов). Дальше я просто наследовался и в JS и PHP для подключения новых списков товаров, отзывов, новостей, элементов корзины и т.д.</li>
    <li>Курс очень понравился именно тем, что Вы прям очень переживаете за учеников... Предлагаете им вне занятий объяснить. На других курсах не так... Свою работу, как рабочий проект, который
    можно показывать работадателям оцениваю на "4-", т.к. моя основная проблема - это портянки неструктуированного кода (с детства дурная привычка порятнки писать, на паскале без модулей помню написал графическую оболочку DOS в стиле total coomander 
    на 10000 строк... работало... но через год ничего понять в коде понять не мог...).
    Сейчас решил вернуться к программированию, вижу и понимаю - эту проблему... Кодить могу, а вот писать понятный и читаемый код - нет. Т.к. никогда не работал в команде...((( Да и в принципе программировать после университета практически перстал 
    (1С только под свои нужды допиливал). Но для этого я и решил поучиться... Спасибо за занятия. Очень познавательно. Надеюсь, Вы у нас будете вести Laravel.</li>
</ul>

<h3>Вопросы</h3>
<ul>
    <li>Насколько я нормально подключаю маршруты и bindings через include в классе application?</li>
    <li>Проверка на наличие прав у меня осуществляется в контроллере(например, проверяю есть ли админовские права прежде чем отдать список заказов). 
    Это там нужно делать или также контролировать в модели при чтении/записи?</li>
    <li>В контроллерах я работаю с репоозиториями через фасады. Это правильно? Или в каждом контроллере нужно DI связи делать с репозиториями и entity model?</li>
</ul>
